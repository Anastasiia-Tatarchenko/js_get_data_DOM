{"version":3,"sources":["scripts/main.js"],"names":["population","document","querySelectorAll","totalTag","querySelector","averageTag","valuesArray","forEach","county","value","parseInt","textContent","replaceAll","push","total","reduce","acc","curr","average","length","preparePopulation","param","prepared","split","reverse","res","i","join"],"mappings":";AAAA,aAgCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9BA,IAAMA,EAAiBC,EAAAA,SAASC,iBAAiB,gBAC3CC,EAAWF,SAASG,cAAc,UAClCC,EAAaJ,SAASG,cAAc,YAEpCE,EAAc,GAEpBN,EAAWO,QAAQ,SAACC,GACZC,IAAAA,EAAQC,SAASF,EAAOG,YAAYC,WAAW,IAAK,KAE1DN,EAAYO,KAAKJ,KAGnB,IAAMK,EAAQR,EAAYS,OAAO,SAACC,EAAKC,GAASD,OAAAA,EAAMC,IAChDC,EAAUJ,EAAQR,EAAYa,OAEpC,SAASC,EAAkBC,GAIpB,IAHCC,IAAAA,GAAY,GAAKD,GAAOE,MAAM,IAAIC,UACpCC,EAAM,GAEDC,EAAI,EAAGA,EAAIJ,EAASH,OAAQO,IACzB,IAANA,GAAWA,EAAI,GAAM,IACvBD,GAAO,KAETA,GAAOH,EAASI,GAGXD,OAAAA,EAAIF,MAAM,IAAIC,UAAUG,KAAK,IAGtCxB,EAASQ,YAAwBS,UAAAA,OAAAA,EAAkBN,IACnDT,EAAWM,YAA0BS,YAAAA,OAAAA,EAAkBF","file":"main.6e76b8ab.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst population = [...document.querySelectorAll('.population')];\nconst totalTag = document.querySelector('.total');\nconst averageTag = document.querySelector('.average');\n\nconst valuesArray = [];\n\npopulation.forEach((county) => {\n  const value = parseInt(county.textContent.replaceAll(',', ''));\n\n  valuesArray.push(value);\n});\n\nconst total = valuesArray.reduce((acc, curr) => acc + curr);\nconst average = total / valuesArray.length;\n\nfunction preparePopulation(param) {\n  const prepared = ('' + param).split('').reverse();\n  let res = '';\n\n  for (let i = 0; i < prepared.length; i++) {\n    if (i !== 0 && i % 3 === 0) {\n      res += ',';\n    }\n    res += prepared[i];\n  }\n\n  return res.split('').reverse().join('');\n}\n\ntotalTag.textContent = `Total: ${preparePopulation(total)}`;\naverageTag.textContent = `Average: ${preparePopulation(average)}`;\n"]}